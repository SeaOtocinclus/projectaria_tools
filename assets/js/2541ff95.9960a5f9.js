"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2879],{87882:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var s=r(74848),a=r(28453),t=(r(98180),r(49489)),i=r(7227);const o={sidebar_position:20,title:"Access Sensor Profiles"},l="Access Sensor Profiles Using the CLI or SDK",c={id:"ARK/sdk/concepts/sdk_sensor_profiles",title:"Access Sensor Profiles",description:"Overview",source:"@site/docs/ARK/sdk/concepts/sdk_sensor_profiles.mdx",sourceDirName:"ARK/sdk/concepts",slug:"/ARK/sdk/concepts/sdk_sensor_profiles",permalink:"/projectaria_tools/docs/ARK/sdk/concepts/sdk_sensor_profiles",draft:!1,unlisted:!1,editUrl:"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/ARK/sdk/concepts/sdk_sensor_profiles.mdx",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20,title:"Access Sensor Profiles"},sidebar:"tutorialSidebar",previous:{title:"Streaming Internals",permalink:"/projectaria_tools/docs/ARK/sdk/concepts/streaming_internals"},next:{title:"About TICSync",permalink:"/projectaria_tools/docs/ARK/sdk/concepts/about_ticsync"}},d={},u=[{value:"Overview",id:"overview",level:2},{value:"Retrieve list of available sensor profiles",id:"retrieve-list-of-available-sensor-profiles",level:2},{value:"Save streaming/recording profiles",id:"save-streamingrecording-profiles",level:3},{value:"Example output",id:"example-output",level:3},{value:"Use a recording/sensor profile",id:"use-a-recordingsensor-profile",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"access-sensor-profiles-using-the-cli-or-sdk",children:"Access Sensor Profiles Using the CLI or SDK"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"Project Aria glasses have multiple recording profiles, so that you can choose what sensors record or stream data, as well as the settings those sensors use. This page shows how to use the Client SDK or CLI to download profile information and set which profile is used."}),"\n",(0,s.jsxs)(n.p,{children:["If a value is not set, Aria glasses will use the ",(0,s.jsx)(n.a,{href:"/docs/ARK/ARK_quickstart#set-your-default-recording-profile",children:"default recording profile"}),". If a default recording profile is not set, it will use ",(0,s.jsx)(n.code,{children:"profile8"})," when making recordings and ",(0,s.jsx)(n.code,{children:"profile18"})," when streaming data."]}),"\n",(0,s.jsxs)(n.p,{children:["Go to the ",(0,s.jsx)(n.a,{href:"/docs/tech_spec/recording_profiles",children:"Recording Profiles page"})," for more information about possible sensor configurations. You can also view all available recording profile details when you select ",(0,s.jsx)(n.strong,{children:"Create a Recording"})," in the Mobile Companion app.  In addition to sensor setup, recording profile information can provide insights into how battery and thermal levels can be affected when streaming or recording."]}),"\n",(0,s.jsx)(n.h2,{id:"retrieve-list-of-available-sensor-profiles",children:"Retrieve list of available sensor profiles"}),"\n",(0,s.jsxs)(n.p,{children:["The CLI or SDK can be used to retrieve the available sensor profiles for recording or streaming stored on your Aria glasses. To make sure you have access to all possible profiles, make sure your ",(0,s.jsx)(n.a,{href:"/docs/ARK/mobile_companion_app#os-update",children:"Aria glasses OS"})," are up to date."]}),"\n",(0,s.jsxs)(n.p,{children:["The available profiles for recording or streaming are the same, but ",(0,s.jsx)(n.code,{children:"profile12"})," and ",(0,s.jsx)(n.code,{children:"profile18"})," were created specifically for streaming data."]}),"\n",(0,s.jsx)(n.h3,{id:"save-streamingrecording-profiles",children:"Save streaming/recording profiles"}),"\n",(0,s.jsxs)(n.p,{children:["The following commands export all profiles as JSON files. There is one JSON file per recording, ",(0,s.jsx)(n.code,{children:"profile12.json"})," etc."]}),"\n",(0,s.jsxs)(t.default,{defaultValue:"sdk",values:[{label:"SDK",value:"sdk"},{label:"CLI",value:"cli"}],children:[(0,s.jsx)(i.default,{value:"sdk",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import aria.sdk as aria\n\ndevice_client = aria.DeviceClient()\ndevice = device_client.connect()\n\n# sensor profiles for recording\nrecording_manager = device.recording_manager\nrecording_profiles = recording_manager.recording_profiles\nprint(*recording_profiles)\n\n# sensor profiles for streaming\nstreaming_manager = device.streaming_manager\nstreaming_profiles = streaming_manager.streaming_profiles\nprint(*streaming_profiles)\n"})})}),(0,s.jsx)(i.default,{value:"cli",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# sensors profiles for recording\naria recording profiles --save-json --json-dir ~/recordingProfiles\n\n# sensors profiles for streaming\naria streaming profiles --save-json --json-dir ~/streamingProfiles\n"})})})]}),"\n",(0,s.jsx)(n.h3,{id:"example-output",children:"Example output"}),"\n",(0,s.jsx)(n.p,{children:"Each JSON file will show which sensors are used and how each sensor is configured."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"profile12.json"})," will contain the following:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n "name": "profile12",\n "description": "Streaming mode with JPEG (RGB 10fps 2MP, SLAM 10fps, ET 10fps QVGA, JPEG; Audio, GPS, Wi-Fi and BLE off)",\n "imu1": {\n  "enabled": true,\n  "dataRateHz": 1000\n },\n "imu2": {\n  "enabled": true,\n  "dataRateHz": 800\n },\n "magnetometer": {\n  "enabled": true,\n  "dataRateHz": 10\n },\n "barometer": {\n  "enabled": true,\n  "dataRateHz": 50\n },\n "audio": {\n  "enabled": false,\n  "numChannels": 0,\n  "sampleRateHz": "0",\n  "periodSize": 0\n },\n "gps": {\n  "enabled": false,\n  "dataRateHz": 0\n },\n "ble": {\n  "enabled": false,\n  "scanDurationMs": 0\n },\n "wifi": {\n  "enabled": false,\n  "scanDurationMs": 0,\n  "wifiScanModeActive": false,\n  "wifiMinDwellTimeMs": 0,\n  "wifiMaxDwellTimeMs": 0\n },\n "slamCameras": {\n  "enabled": true,\n  "width": 640,\n  "height": 480,\n  "fps": 10,\n  "autoExposureEnabled": true,\n  "exposureMinUs": "0",\n  "exposureMaxUs": "0",\n  "gainMin": 0,\n  "gainMax": 0,\n  "exposureUs": "0",\n  "gain": 0,\n  "irLedEnabled": false,\n  "imageFormat": "JPEG",\n  "jpegEncoderType": "HARDWARE",\n  "jpegQuality": 80,\n  "videoEncoderQp": 0,\n  "videoCodecType": "H264",\n  "targetIntensity": 0\n },\n "etCamera": {\n  "enabled": true,\n  "width": 320,\n  "height": 240,\n  "fps": 10,\n  "autoExposureEnabled": false,\n  "exposureMinUs": "0",\n  "exposureMaxUs": "0",\n  "gainMin": 0,\n  "gainMax": 0,\n  "exposureUs": "1000",\n  "gain": 1,\n  "irLedEnabled": true,\n  "imageFormat": "JPEG",\n  "jpegEncoderType": "HARDWARE",\n  "jpegQuality": 80,\n  "videoEncoderQp": 0,\n  "videoCodecType": "H264",\n  "targetIntensity": 0\n },\n "rgbCamera": {\n  "enabled": true,\n  "width": 1408,\n  "height": 1408,\n  "fps": 10,\n  "autoExposureEnabled": true,\n  "exposureMinUs": "0",\n  "exposureMaxUs": "0",\n  "gainMin": 0,\n  "gainMax": 0,\n  "exposureUs": "0",\n  "gain": 0,\n  "irLedEnabled": false,\n  "imageFormat": "JPEG",\n  "jpegEncoderType": "HARDWARE",\n  "jpegQuality": 80,\n  "videoEncoderQp": 0,\n  "videoCodecType": "H264",\n  "targetIntensity": 0\n },\n "attention": {\n  "enabled": false\n }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"use-a-recordingsensor-profile",children:"Use a recording/sensor profile"}),"\n",(0,s.jsx)(n.p,{children:"Once retrieved a profile can be used to start recording or streaming."}),"\n",(0,s.jsxs)(n.p,{children:["In this example, we use the sensor profile ",(0,s.jsx)(n.code,{children:"profile12"})," obtained from the previous step to start streaming:"]}),"\n",(0,s.jsxs)(t.default,{defaultValue:"sdk",values:[{label:"SDK",value:"sdk"},{label:"CLI",value:"cli"}],children:[(0,s.jsx)(i.default,{value:"sdk",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'streaming_manager = device.streaming_manager\nstreaming_config = aria.RecordingConfig()\nstreaming_config.profile_name = "profile12"\nstreaming_manager.streaming_config = streaming_config\nstreaming_manager.start_streaming()\n'})})}),(0,s.jsx)(i.default,{value:"cli",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"aria streaming start --profile profile12\n"})})})]})]})}function f(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},7227:(e,n,r)=>{r.r(n),r.d(n,{default:()=>i});r(96540);var s=r(34164);const a={tabItem:"tabItem_Ymn6"};var t=r(74848);function i(e){let{children:n,hidden:r,className:i}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,s.A)(a.tabItem,i),hidden:r,children:n})}},49489:(e,n,r)=>{r.r(n),r.d(n,{default:()=>_});var s=r(96540),a=r(34164),t=r(24245),i=r(56347),o=r(36494),l=r(62814),c=r(45167),d=r(69900);function u(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:r}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:r,attributes:s,default:a}}=e;return{value:n,label:r,attributes:s,default:a}}))}(r);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function f(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:r}=e;const a=(0,i.W6)(),t=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,l.aZ)(t),(0,s.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(a.location.search);n.set(t,e),a.replace({...a.location,search:n.toString()})}),[t,a])]}function g(e){const{defaultValue:n,queryString:r=!1,groupId:a}=e,t=p(e),[i,l]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=r.find((e=>e.default))??r[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:t}))),[c,u]=h({queryString:r,groupId:a}),[g,m]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,t]=(0,d.Dv)(r);return[a,(0,s.useCallback)((e=>{r&&t.set(e)}),[r,t])]}({groupId:a}),b=(()=>{const e=c??g;return f({value:e,tabValues:t})?e:null})();(0,o.A)((()=>{b&&l(b)}),[b]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!f({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),m(e)}),[u,m,t]),tabValues:t}}var m=r(11062);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=r(74848);function x(e){let{className:n,block:r,selectedValue:s,selectValue:i,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,t.a_)(),d=e=>{const n=e.currentTarget,r=l.indexOf(n),a=o[r].value;a!==s&&(c(n),i(a))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":r},n),children:o.map((e=>{let{value:n,label:r,attributes:t}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...t,className:(0,a.A)("tabs__item",b.tabItem,t?.className,{"tabs__item--active":s===n}),children:r??n},n)}))})}function j(e){let{lazy:n,children:r,selectedValue:t}=e;const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===t));return e?(0,s.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function w(e){const n=g(e);return(0,v.jsxs)("div",{className:(0,a.A)("tabs-container",b.tabList),children:[(0,v.jsx)(x,{...n,...e}),(0,v.jsx)(j,{...n,...e})]})}function _(e){const n=(0,m.default)();return(0,v.jsx)(w,{...e,children:u(e.children)},String(n))}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var s=r(96540);const a={},t=s.createContext(a);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);