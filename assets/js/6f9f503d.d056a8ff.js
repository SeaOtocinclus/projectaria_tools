"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[468],{15680:(e,t,a)=>{a.r(t),a.d(t,{MDXContext:()=>c,MDXProvider:()=>p,mdx:()=>_,useMDXComponents:()=>m,withMDXComponents:()=>l});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},i.apply(this,arguments)}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),l=function(e){return function(t){var a=m(t.components);return n.createElement(e,i({},t,{components:a}))}},m=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),l=m(a),p=r,u=l["".concat(o,".").concat(p)]||l[p]||y[p]||i;return a?n.createElement(u,s(s({ref:t},c),{},{components:a})):n.createElement(u,s({ref:t},c))}));function _(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=v;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}v.displayName="MDXCreateElement"},26829:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=a(58168),r=(a(96540),a(15680));const i={sidebar_position:30,title:"Data Format"},o="AEA Data Format",s={unversionedId:"open_datasets/aria_everyday_activities_dataset/aea_data_format",id:"open_datasets/aria_everyday_activities_dataset/aea_data_format",title:"Data Format",description:"The Aria Everyday Activities dataset contains multiple activity sequences for one to two Project Aria glasses users. We created recordings using scripts to represent all day activities with always on sensing.",source:"@site/docs/open_datasets/aria_everyday_activities_dataset/aea_data_format.mdx",sourceDirName:"open_datasets/aria_everyday_activities_dataset",slug:"/open_datasets/aria_everyday_activities_dataset/aea_data_format",permalink:"/projectaria_tools/docs/open_datasets/aria_everyday_activities_dataset/aea_data_format",draft:!1,editUrl:"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/open_datasets/aria_everyday_activities_dataset/aea_data_format.mdx",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30,title:"Data Format"},sidebar:"tutorialSidebar",previous:{title:"Dataset Download",permalink:"/projectaria_tools/docs/open_datasets/aria_everyday_activities_dataset/aea_download_dataset"},next:{title:"Visualizer",permalink:"/projectaria_tools/docs/open_datasets/aria_everyday_activities_dataset/aea_visualizers"}},d={},c=[{value:"Speech to Text annotation",id:"speech-to-text-annotation",level:2},{value:"Timestamps Mapping Data",id:"timestamps-mapping-data",level:2}],l={toc:c},m="wrapper";function p(e){let{components:t,...a}=e;return(0,r.mdx)(m,(0,n.A)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"aea-data-format"},"AEA Data Format"),(0,r.mdx)("p",null,"The Aria Everyday Activities dataset contains multiple activity sequences for one to two Project Aria glasses users. We created recordings using ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/open_datasets/aria_everyday_activities_dataset/aea_scripts"},"scripts")," to represent all day activities with always on sensing."),(0,r.mdx)("p",null,"Each Aria glasses recording is stored as its own sequence with all data related to that recording self contained within that sequence folder. An example sequence folder would look like this:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"loc1_script1_seq1_rec1\n   \u251c\u2500\u2500 recording.vrs\n   \u251c\u2500\u2500 metadata.json\n   \u251c\u2500\u2500 speech.csv\n   \u251c\u2500\u2500  MPS\n       \u251c\u2500\u2500 eye_gaze\n           \u251c\u2500\u2500 general_eye_gaze.csv\n           \u251c\u2500\u2500 summary.json\n       \u251c\u2500\u2500 slam\n           \u251c\u2500\u2500 closed_loop_trajectory.csv\n           \u251c\u2500\u2500 open_loop_trajectory.csv\n           \u251c\u2500\u2500 online_calibration.csv\n           \u251c\u2500\u2500 semidense_observations.csv.gz\n           \u251c\u2500\u2500 semidense_points.csv.gz\n           \u251c\u2500\u2500 summary.json\n\n")),(0,r.mdx)("h2",{id:"speech-to-text-annotation"},"Speech to Text annotation"),(0,r.mdx)("p",null,"Speech to Text annotation provides text strings generated by Automatic Speech Recognition (ASR) with timestamps and confidence rating. The ASR annotation used an in-house proprietary system. Similar results can be acquired via open-source ASR solutions."),(0,r.mdx)("p",null,"Table 2: ",(0,r.mdx)("em",null,(0,r.mdx)("inlineCode",{parentName:"p"},"speech.csv")," Structure")),(0,r.mdx)("table",null,(0,r.mdx)("tr",null,(0,r.mdx)("td",null,(0,r.mdx)("strong",null,"startTime_ns")),(0,r.mdx)("td",null,(0,r.mdx)("strong",null,"endTime_ns")),(0,r.mdx)("td",null,(0,r.mdx)("strong",null,"written")),(0,r.mdx)("td",null,(0,r.mdx)("strong",null,"confidence"))),(0,r.mdx)("tr",null,(0,r.mdx)("td",null,"54040"),(0,r.mdx)("td",null,"55040"),(0,r.mdx)("td",null,"I\u2019m"),(0,r.mdx)("td",null,"0.25608")),(0,r.mdx)("tr",null,(0,r.mdx)("td",null,"72920"),(0,r.mdx)("td",null,"73920"),(0,r.mdx)("td",null,"looking"),(0,r.mdx)("td",null,"0.84339"))),(0,r.mdx)("h2",{id:"timestamps-mapping-data"},"Timestamps Mapping Data"),(0,r.mdx)("p",null,"Project Aria glasses and multi-view devices operating in proximity to each other (","<","100m) can leverage ",(0,r.mdx)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/SMPTE_timecode"},"SMPTE timecode")," to receive a synchronized time clock with sub-millisecond accuracy."),(0,r.mdx)("p",null,"The mapping between device time and timecode clock for each sequence is stored in the VRS file as a Time Domain Mapping Class. Go to ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_formats/aria_vrs/timestamps_in_aria_vrs"},"Timestamps in Aria VRS Files")," for more information about how Aria sensor data is timestamped."),(0,r.mdx)("p",null,"To translate the local timestamp of an arbitrary piece of data to the timecode time domain, you can interpolate between device timestamps in the time domain mapping data. An implementation of this mechanism is already provided in ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/facebookresearch/projectaria_tools/blob/main/core/data_provider/VrsDataProvider.h#L299-L309"},"VrsDataProvider"),". To synchronize data from a secondary device, you can query that second VRS with this timecode time. This functionality is also already implemented in the VrsDataProvider class."))}p.isMDXComponent=!0}}]);